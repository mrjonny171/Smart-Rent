{
  "address": "0xaae8800B05F27983E5331c99B6ebCCf92DBD01ac",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rentPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numberOfMonths",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ContractExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsuficientFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidManager",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTenant",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoCandidates",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RequestOwnerAuthorization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RequestTenantAuthorization",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "revenue",
          "type": "uint256"
        }
      ],
      "name": "applyForRentContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chooseTenant",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRentPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnlockitFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "increasedDuration",
          "type": "uint256"
        }
      ],
      "name": "increaseContractDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "increasedDuration",
          "type": "uint256"
        }
      ],
      "name": "increaseOwnerContractDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "increasedDuration",
          "type": "uint256"
        }
      ],
      "name": "increaseTenantContractDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "processPayment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xabf9b74c6147ca61254cbce6589b2affd0703dceecac4ec2ad5cd8fcb0b5d3d4",
  "receipt": {
    "to": null,
    "from": "0xf72703D3939749eB52399a7CeD61eA5e79412491",
    "contractAddress": "0xaae8800B05F27983E5331c99B6ebCCf92DBD01ac",
    "transactionIndex": 91,
    "gasUsed": "1152513",
    "logsBloom": "0x
    "blockHash": "0x879046642be4f462e21f79fe0b93f9bab28ce32c37ff7f75e2c2431bdb7b2983",
    "transactionHash": "0xabf9b74c6147ca61254cbce6589b2affd0703dceecac4ec2ad5cd8fcb0b5d3d4",
    "logs": [],
    "blockNumber": 8222580,
    "cumulativeGasUsed": "19636326",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xC748bA387AAB4c36c2a876930aB4Aeeed82cFDc2",
    "100000000000000000",
    12
  ],
  "numDeployments": 1,
  "solcInputHash": "bcf68b8342de1b1318fe43a09dc4448a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rentPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfMonths\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ContractExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsuficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTenant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoCandidates\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RequestOwnerAuthorization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RequestTenantAuthorization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"}],\"name\":\"applyForRentContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chooseTenant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnlockitFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedDuration\",\"type\":\"uint256\"}],\"name\":\"increaseContractDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedDuration\",\"type\":\"uint256\"}],\"name\":\"increaseOwnerContractDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedDuration\",\"type\":\"uint256\"}],\"name\":\"increaseTenantContractDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"processPayment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"applyForRentContract(uint256)\":{\"details\":\"Tenant Functions\"},\"chooseTenant()\":{\"details\":\"Mock function\"},\"constructor\":{\"details\":\"Owner is only responsible for creating the initial state of the renting contract and choosing the appropriate tenant\"},\"fund()\":{\"details\":\"Funds the contract with a certain amount of eth\"},\"getManager()\":{\"details\":\"Getters\"},\"increaseContractDuration(uint256)\":{\"details\":\"Function to validate an extension of contract\"},\"increaseTenantContractDuration(uint256)\":{\"details\":\"Registers that the tenant wants to extend the contract for a specific period of time\"},\"processPayment()\":{\"details\":\"Manager Functions This function will be called by the chainLink offchain nodes   in the first day of every month\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/smartRent.sol\":\"smartRent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/smartRent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nerror InvalidTenant();\\nerror InvalidManager();\\nerror InvalidOwner();\\n\\nerror InsuficientFunds();\\nerror NoAuthorization();\\nerror RequestOwnerAuthorization();\\nerror RequestTenantAuthorization();\\nerror ContractExpired();\\nerror ContractOccupied();\\nerror NoCandidates();\\n\\ncontract smartRent {\\n    //Struct that defines the values that our contract will be developed in\\n    //What can be public?\\n\\n    struct candidate {\\n        address account;\\n        uint256 revenue;\\n    }\\n\\n    //Owner of the house\\n    address private s_owner;\\n\\n    //Unlockit Address\\n    address private immutable i_manager;\\n\\n    // Possible tenants\\n    candidate[] private s_candidates;\\n    uint256 private nCandidates;\\n\\n    uint256 private constant UNLOCKIT_FEE = 1;\\n\\n    //Tenant, the one who is paying the contract\\n    address private s_chosenTenant;\\n\\n    //Contract Balance\\n    uint256 private s_balance;\\n\\n    //Rent  Price\\n    uint256 private s_rentPrice;\\n\\n    //Duration of the contract\\n    uint256 private s_numberOfMonths;\\n\\n    //Number of paid months\\n    uint256 private s_paidMonths;\\n\\n    // Address => New Duration => True / False\\n    mapping(address => mapping(uint256 => bool)) private s_extendAuthorizations;\\n\\n    /**\\n     * @dev Owner is only responsible for creating the initial\\n     * state of the renting contract and choosing the appropriate tenant\\n     */\\n    constructor(address manager, uint256 rentPrice, uint256 numberOfMonths) {\\n        s_owner = msg.sender;\\n        i_manager = manager;\\n        s_rentPrice = rentPrice;\\n        s_numberOfMonths = numberOfMonths;\\n        s_paidMonths = 0;\\n    }\\n\\n    /**\\n     * @dev Mock function\\n     */\\n\\n    function chooseTenant() public {\\n        if (msg.sender != s_owner) {\\n            revert InvalidOwner();\\n        }\\n\\n        if (nCandidates == 0) {\\n            revert NoCandidates();\\n        }\\n\\n        candidate memory bestTenant = s_candidates[0];\\n\\n        for (uint i = 1; i < nCandidates; i++) {\\n            if (s_candidates[i].revenue > bestTenant.revenue) {\\n                bestTenant = s_candidates[i];\\n            }\\n        }\\n\\n        s_chosenTenant = bestTenant.account;\\n    }\\n\\n    function increaseOwnerContractDuration(uint256 increasedDuration) public {\\n        if (msg.sender != s_owner) {\\n            revert InvalidOwner();\\n        }\\n\\n        s_extendAuthorizations[s_owner][increasedDuration] = true;\\n    }\\n\\n    /**\\n     * @dev Manager Functions\\n     * This function will be called by the chainLink\\n     * offchain nodes   in the first day of every month\\n     */\\n\\n    function processPayment() public payable {\\n        if (msg.sender != i_manager) {\\n            revert InvalidManager();\\n        }\\n\\n        if (s_balance < s_rentPrice) {\\n            revert InsuficientFunds();\\n        }\\n\\n        if (s_paidMonths == s_numberOfMonths) {\\n            revert ContractExpired();\\n        }\\n\\n        bool success;\\n\\n        uint256 ownerPayment = (s_rentPrice * (100 - UNLOCKIT_FEE)) / 100;\\n        uint256 feePayment = (s_rentPrice * UNLOCKIT_FEE) / 100;\\n\\n        (success, ) = s_owner.call{value: ownerPayment}('');\\n        require(success, 'Payment Failed');\\n\\n        (success, ) = i_manager.call{value: feePayment}('');\\n        require(success, 'Payment Failed');\\n\\n        s_paidMonths++;\\n        s_balance -= s_rentPrice;\\n    }\\n\\n    /**\\n     * @dev Tenant Functions\\n     */\\n\\n    function applyForRentContract(\\n        uint256 revenue /* Argumentos Estilo numeros do IRS, etc */\\n    ) public {\\n        s_candidates.push(candidate(msg.sender, revenue));\\n        nCandidates++;\\n    }\\n\\n    /**\\n     * @dev Funds the contract with a certain amount of eth\\n     */\\n    function fund() public payable {\\n        if (msg.sender != s_chosenTenant) {\\n            revert InvalidTenant();\\n        }\\n        s_balance += msg.value;\\n    }\\n\\n    /**\\n     * @dev Registers that the tenant wants to extend the contract for a\\n     * specific period of time\\n     */\\n    function increaseTenantContractDuration(uint256 increasedDuration) public {\\n        if (msg.sender != s_chosenTenant) {\\n            revert InvalidTenant();\\n        }\\n\\n        s_extendAuthorizations[s_chosenTenant][increasedDuration] = true;\\n    }\\n\\n    /**\\n     * @dev Function to validate an extension of contract\\n     */\\n\\n    function increaseContractDuration(uint256 increasedDuration) public {\\n        if (msg.sender != i_manager) {\\n            revert InvalidManager();\\n        }\\n\\n        if (!s_extendAuthorizations[s_owner][increasedDuration]) {\\n            revert RequestOwnerAuthorization();\\n        }\\n\\n        if (!s_extendAuthorizations[s_chosenTenant][increasedDuration]) {\\n            revert RequestTenantAuthorization();\\n        }\\n\\n        s_extendAuthorizations[s_owner][increasedDuration] = false;\\n        s_extendAuthorizations[s_chosenTenant][increasedDuration] = false;\\n\\n        s_numberOfMonths += increasedDuration;\\n    }\\n\\n    /**\\n     * @dev Getters\\n     */\\n\\n    function getManager() public view returns (address) {\\n        return i_manager;\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return s_owner;\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return s_balance;\\n    }\\n\\n    function getRentPrice() public view returns (uint256) {\\n        return s_rentPrice;\\n    }\\n\\n    function getUnlockitFee() public pure returns (uint256) {\\n        return UNLOCKIT_FEE;\\n    }\\n}\\n\",\"keccak256\":\"0xa2905bada9a081f69c5291da79050b0b4d36c0f0db680fc520b3f90e32d9c7bd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200149d3803806200149d83398181016040528101906200003791906200016f565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505081600581905550806006819055506000600781905550505050620001cb565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000fc82620000cf565b9050919050565b6200010e81620000ef565b81146200011a57600080fd5b50565b6000815190506200012e8162000103565b92915050565b6000819050919050565b620001498162000134565b81146200015557600080fd5b50565b60008151905062000169816200013e565b92915050565b6000806000606084860312156200018b576200018a620000ca565b5b60006200019b868287016200011d565b9350506020620001ae8682870162000158565b9250506040620001c18682870162000158565b9150509250925092565b6080516112a1620001fc60003960008181610370015281816105870152818161093f0152610dc801526112a16000f3fe6080604052600436106100a75760003560e01c806397ccfa1b1161006457806397ccfa1b1461017757806398384c95146101a0578063b60d4288146101c9578063d5009584146101d3578063d5b1aaa4146101fe578063f67c9adf14610227576100a7565b80630c4e3af4146100ac57806312065fe0146100d557806322081c12146101005780632f93b5b31461010a578063570a10ef14610135578063893d20e81461014c575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610f45565b610252565b005b3480156100e157600080fd5b506100ea610364565b6040516100f79190610f81565b60405180910390f35b61010861036e565b005b34801561011657600080fd5b5061011f610689565b60405161012c9190610f81565b60405180910390f35b34801561014157600080fd5b5061014a610693565b005b34801561015857600080fd5b50610161610914565b60405161016e9190610fdd565b60405180910390f35b34801561018357600080fd5b5061019e60048036038101906101999190610f45565b61093d565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190610f45565b610c5e565b005b6101d1610d22565b005b3480156101df57600080fd5b506101e8610dc4565b6040516101f59190610fdd565b60405180910390f35b34801561020a57600080fd5b5061022560048036038101906102209190610f45565b610dec565b005b34801561023357600080fd5b5061023c610f01565b6040516102499190610f81565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d7576040517f49e27cff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600860008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600454905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f3576040517f34e70f7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005546004541015610431576040517fefdfc19800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006546007540361046e576040517f0790d4e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806064600160646104819190611027565b60055461048e919061105b565b61049891906110cc565b90506000606460016005546104ad919061105b565b6104b791906110cc565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516104fd9061112e565b60006040518083038185875af1925050503d806000811461053a576040519150601f19603f3d011682016040523d82523d6000602084013e61053f565b606091505b50508093505082610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057c906111a0565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16816040516105c99061112e565b60006040518083038185875af1925050503d8060008114610606576040519150601f19603f3d011682016040523d82523d6000602084013e61060b565b606091505b50508093505082610651576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610648906111a0565b60405180910390fd5b60076000815480929190610664906111c0565b91905055506005546004600082825461067d9190611027565b92505081905550505050565b6000600554905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610718576040517f49e27cff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060025403610754576040517fe504190400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008154811061076b5761076a611208565b5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000600190505b6002548110156108cb578160200151600182815481106108105761080f611208565b5b90600052602060002090600202016001015411156108b8576001818154811061083c5761083b611208565b5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505091505b80806108c3906111c0565b9150506107ed565b508060000151600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109c2576040517f34e70f7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600860008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16610a77576040517fd5ee91c000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60086000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16610b2d576040517fc4f657c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600860008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff021916908315150217905550600060086000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508060066000828254610c549190611237565b9250508190555050565b600160405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060026000815480929190610d1a906111c0565b919050555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610da9576040517f59d24e9a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460046000828254610dbb9190611237565b92505081905550565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e73576040517f59d24e9a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160086000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006001905090565b600080fd5b6000819050919050565b610f2281610f0f565b8114610f2d57600080fd5b50565b600081359050610f3f81610f19565b92915050565b600060208284031215610f5b57610f5a610f0a565b5b6000610f6984828501610f30565b91505092915050565b610f7b81610f0f565b82525050565b6000602082019050610f966000830184610f72565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fc782610f9c565b9050919050565b610fd781610fbc565b82525050565b6000602082019050610ff26000830184610fce565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061103282610f0f565b915061103d83610f0f565b925082820390508181111561105557611054610ff8565b5b92915050565b600061106682610f0f565b915061107183610f0f565b925082820261107f81610f0f565b9150828204841483151761109657611095610ff8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110d782610f0f565b91506110e283610f0f565b9250826110f2576110f161109d565b5b828204905092915050565b600081905092915050565b50565b60006111186000836110fd565b915061112382611108565b600082019050919050565b60006111398261110b565b9150819050919050565b600082825260208201905092915050565b7f5061796d656e74204661696c6564000000000000000000000000000000000000600082015250565b600061118a600e83611143565b915061119582611154565b602082019050919050565b600060208201905081810360008301526111b98161117d565b9050919050565b60006111cb82610f0f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036111fd576111fc610ff8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061124282610f0f565b915061124d83610f0f565b925082820190508082111561126557611264610ff8565b5b9291505056fea2646970667358221220618d5d2f2950f00dc52b53a89295d8fb102b6ef2a8d6eadf8fd5b9e535d0cd0a64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c806397ccfa1b1161006457806397ccfa1b1461017757806398384c95146101a0578063b60d4288146101c9578063d5009584146101d3578063d5b1aaa4146101fe578063f67c9adf14610227576100a7565b80630c4e3af4146100ac57806312065fe0146100d557806322081c12146101005780632f93b5b31461010a578063570a10ef14610135578063893d20e81461014c575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610f45565b610252565b005b3480156100e157600080fd5b506100ea610364565b6040516100f79190610f81565b60405180910390f35b61010861036e565b005b34801561011657600080fd5b5061011f610689565b60405161012c9190610f81565b60405180910390f35b34801561014157600080fd5b5061014a610693565b005b34801561015857600080fd5b50610161610914565b60405161016e9190610fdd565b60405180910390f35b34801561018357600080fd5b5061019e60048036038101906101999190610f45565b61093d565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190610f45565b610c5e565b005b6101d1610d22565b005b3480156101df57600080fd5b506101e8610dc4565b6040516101f59190610fdd565b60405180910390f35b34801561020a57600080fd5b5061022560048036038101906102209190610f45565b610dec565b005b34801561023357600080fd5b5061023c610f01565b6040516102499190610f81565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d7576040517f49e27cff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600860008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600454905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f3576040517f34e70f7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005546004541015610431576040517fefdfc19800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006546007540361046e576040517f0790d4e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806064600160646104819190611027565b60055461048e919061105b565b61049891906110cc565b90506000606460016005546104ad919061105b565b6104b791906110cc565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516104fd9061112e565b60006040518083038185875af1925050503d806000811461053a576040519150601f19603f3d011682016040523d82523d6000602084013e61053f565b606091505b50508093505082610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057c906111a0565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16816040516105c99061112e565b60006040518083038185875af1925050503d8060008114610606576040519150601f19603f3d011682016040523d82523d6000602084013e61060b565b606091505b50508093505082610651576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610648906111a0565b60405180910390fd5b60076000815480929190610664906111c0565b91905055506005546004600082825461067d9190611027565b92505081905550505050565b6000600554905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610718576040517f49e27cff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060025403610754576040517fe504190400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008154811061076b5761076a611208565b5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000600190505b6002548110156108cb578160200151600182815481106108105761080f611208565b5b90600052602060002090600202016001015411156108b8576001818154811061083c5761083b611208565b5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505091505b80806108c3906111c0565b9150506107ed565b508060000151600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109c2576040517f34e70f7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600860008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16610a77576040517fd5ee91c000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60086000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16610b2d576040517fc4f657c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600860008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff021916908315150217905550600060086000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508060066000828254610c549190611237565b9250508190555050565b600160405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060026000815480929190610d1a906111c0565b919050555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610da9576040517f59d24e9a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460046000828254610dbb9190611237565b92505081905550565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e73576040517f59d24e9a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160086000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006001905090565b600080fd5b6000819050919050565b610f2281610f0f565b8114610f2d57600080fd5b50565b600081359050610f3f81610f19565b92915050565b600060208284031215610f5b57610f5a610f0a565b5b6000610f6984828501610f30565b91505092915050565b610f7b81610f0f565b82525050565b6000602082019050610f966000830184610f72565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fc782610f9c565b9050919050565b610fd781610fbc565b82525050565b6000602082019050610ff26000830184610fce565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061103282610f0f565b915061103d83610f0f565b925082820390508181111561105557611054610ff8565b5b92915050565b600061106682610f0f565b915061107183610f0f565b925082820261107f81610f0f565b9150828204841483151761109657611095610ff8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110d782610f0f565b91506110e283610f0f565b9250826110f2576110f161109d565b5b828204905092915050565b600081905092915050565b50565b60006111186000836110fd565b915061112382611108565b600082019050919050565b60006111398261110b565b9150819050919050565b600082825260208201905092915050565b7f5061796d656e74204661696c6564000000000000000000000000000000000000600082015250565b600061118a600e83611143565b915061119582611154565b602082019050919050565b600060208201905081810360008301526111b98161117d565b9050919050565b60006111cb82610f0f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036111fd576111fc610ff8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061124282610f0f565b915061124d83610f0f565b925082820190508082111561126557611264610ff8565b5b9291505056fea2646970667358221220618d5d2f2950f00dc52b53a89295d8fb102b6ef2a8d6eadf8fd5b9e535d0cd0a64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "applyForRentContract(uint256)": {
        "details": "Tenant Functions"
      },
      "chooseTenant()": {
        "details": "Mock function"
      },
      "constructor": {
        "details": "Owner is only responsible for creating the initial state of the renting contract and choosing the appropriate tenant"
      },
      "fund()": {
        "details": "Funds the contract with a certain amount of eth"
      },
      "getManager()": {
        "details": "Getters"
      },
      "increaseContractDuration(uint256)": {
        "details": "Function to validate an extension of contract"
      },
      "increaseTenantContractDuration(uint256)": {
        "details": "Registers that the tenant wants to extend the contract for a specific period of time"
      },
      "processPayment()": {
        "details": "Manager Functions This function will be called by the chainLink offchain nodes   in the first day of every month"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 28,
        "contract": "contracts/smartRent.sol:smartRent",
        "label": "s_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 34,
        "contract": "contracts/smartRent.sol:smartRent",
        "label": "s_candidates",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(candidate)26_storage)dyn_storage"
      },
      {
        "astId": 36,
        "contract": "contracts/smartRent.sol:smartRent",
        "label": "nCandidates",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 41,
        "contract": "contracts/smartRent.sol:smartRent",
        "label": "s_chosenTenant",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 43,
        "contract": "contracts/smartRent.sol:smartRent",
        "label": "s_balance",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 45,
        "contract": "contracts/smartRent.sol:smartRent",
        "label": "s_rentPrice",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 47,
        "contract": "contracts/smartRent.sol:smartRent",
        "label": "s_numberOfMonths",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 49,
        "contract": "contracts/smartRent.sol:smartRent",
        "label": "s_paidMonths",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 55,
        "contract": "contracts/smartRent.sol:smartRent",
        "label": "s_extendAuthorizations",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(candidate)26_storage)dyn_storage": {
        "base": "t_struct(candidate)26_storage",
        "encoding": "dynamic_array",
        "label": "struct smartRent.candidate[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_struct(candidate)26_storage": {
        "encoding": "inplace",
        "label": "struct smartRent.candidate",
        "members": [
          {
            "astId": 23,
            "contract": "contracts/smartRent.sol:smartRent",
            "label": "account",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 25,
            "contract": "contracts/smartRent.sol:smartRent",
            "label": "revenue",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}